(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/wasm_gamebuino.js":
/*!********************************!*\
  !*** ../pkg/wasm_gamebuino.js ***!
  \********************************/
/*! exports provided: Gamebuino, __wbg_new_59cb74e423758ede, __wbg_stack_558ba5917b466edd, __wbg_error_4bb6c2a97407129a, __wbindgen_object_drop_ref, __wbg_random_40717e477b6813d8, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gamebuino\", function() { return Gamebuino; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_59cb74e423758ede\", function() { return __wbg_new_59cb74e423758ede; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_stack_558ba5917b466edd\", function() { return __wbg_stack_558ba5917b466edd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_4bb6c2a97407129a\", function() { return __wbg_error_4bb6c2a97407129a; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_40717e477b6813d8\", function() { return __wbg_random_40717e477b6813d8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm_gamebuino_bg.wasm */ \"../pkg/wasm_gamebuino_bg.wasm\");\n\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory0 = new Int32Array(_wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n/**\n*/\nclass Gamebuino {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Gamebuino.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_gamebuino_free\"](ptr);\n    }\n    /**\n    * @returns {Gamebuino}\n    */\n    static new() {\n        var ret = _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gamebuino_new\"]();\n        return Gamebuino.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    get_register(i) {\n        var ret = _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gamebuino_get_register\"](this.ptr, i);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_tick_count() {\n        var ret = _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gamebuino_get_tick_count\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {Uint8Array} contents\n    * @param {number} offset\n    */\n    load_program(contents, offset) {\n        var ptr0 = passArray8ToWasm0(contents, _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        var len0 = WASM_VECTOR_LEN;\n        _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gamebuino_load_program\"](this.ptr, ptr0, len0, offset);\n    }\n    /**\n    */\n    step() {\n        _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gamebuino_step\"](this.ptr);\n    }\n    /**\n    * @param {number} steps\n    * @param {number} button_data\n    */\n    run(steps, button_data) {\n        _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gamebuino_run\"](this.ptr, steps, button_data);\n    }\n    /**\n    * @returns {number}\n    */\n    screen_data() {\n        var ret = _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gamebuino_screen_data\"](this.ptr);\n        return ret;\n    }\n}\n\nconst __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nconst __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nconst __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        _wasm_gamebuino_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](arg0, arg1);\n    }\n};\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __wbg_random_40717e477b6813d8 = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../pkg/wasm_gamebuino.js?");

/***/ }),

/***/ "../pkg/wasm_gamebuino_bg.wasm":
/*!*************************************!*\
  !*** ../pkg/wasm_gamebuino_bg.wasm ***!
  \*************************************/
/*! exports provided: memory, __wbg_gamebuino_free, gamebuino_new, gamebuino_get_register, gamebuino_get_tick_count, gamebuino_load_program, gamebuino_step, gamebuino_run, gamebuino_screen_data, __wbindgen_malloc, __wbindgen_free, __wbindgen_realloc */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./wasm_gamebuino.js */ \"../pkg/wasm_gamebuino.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/wasm_gamebuino_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wasm_gamebuino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-gamebuino */ \"../pkg/wasm_gamebuino.js\");\n/* harmony import */ var wasm_gamebuino_wasm_gamebuino_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wasm-gamebuino/wasm_gamebuino_bg */ \"../pkg/wasm_gamebuino_bg.wasm\");\n\n\n\nconst keymap = [\n    [83, 40], // down\n    [65, 81, 37], // left\n    [68, 39], // right\n    [87, 90, 38], // up\n    [74], // A\n    [75], // B\n    [85], // MENU\n    [73] // HOME\n];\n\nconst dpadX = 109;\nconst dpadY = 206;\nconst dpadDist = 87;\n\nconst aX = 639;\nconst aY = 223;\n\nconst bX = 716;\nconst bY = 189;\n\nconst menuX = 287;\nconst menuY = 372;\n\nconst homeX = 495;\nconst homeY = 372;\n\nconst btnDist = 40;\n\nclass GamebuinoEmulator extends HTMLElement {\n    constructor() {\n        super();\n\n        this.root = this.attachShadow({ mode: \"open\" });\n\n        this.root.innerHTML = `\n        <style>\n            :host {\n                display: inline-block;\n                width: 788px;\n                height: 428px;\n            }\n\n            #console {\n                width: 788px;\n                height: 428px;\n                background-image: url(console.png);\n                position: relative;\n            }\n\n            #gbscreen {\n                position: absolute;\n                top: 80px;\n                left: 232px;\n            }\n        </style>\n        <div id=\"console\">\n            <canvas id=\"gbscreen\" width=\"320\" height=\"256\"></canvas>\n        </div>\n        `;\n\n        this.canvas = this.root.getElementById(\"gbscreen\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.ctx.scale(2, 2);\n        this.ctx.imageSmoothingEnabled = false;\n\n        this.imageData = this.ctx.getImageData(0, 0, 160, 128);\n\n        this.buttonData = 0b11111111;\n        this.lastTimestamp = 0;\n        this.requestId;\n\n        this.pointerPresses = {};\n\n        document.addEventListener(\"keydown\", event => {\n            for (var i = 0; i < keymap.length; i++) {\n                for (var code of keymap[i]) {\n                    if (code == event.keyCode) {\n                        event.preventDefault();\n                        this.buttonData &= ~(1 << i);\n                        return;\n                    }\n                }\n            }\n        });\n\n        document.addEventListener(\"keyup\", event => {\n            for (var i = 0; i < keymap.length; i++) {\n                for (var code of keymap[i]) {\n                    if (code == event.keyCode) {\n                        this.buttonData |= 1 << i;\n                        return;\n                    }\n                }\n            }\n        });\n\n        const controls = this.root.getElementById(\"console\");\n\n        controls.addEventListener(\"pointerdown\", event =>\n            this.handlePointerDown(event)\n        );\n        controls.addEventListener(\"pointermove\", event =>\n            this.handlePointerMove(event)\n        );\n        document.addEventListener(\"pointerup\", event =>\n            this.handlePointerUp(event)\n        );\n        document.addEventListener(\"pointercancel\", event =>\n            this.handlePointerUp(event)\n        );\n\n        this.start();\n    }\n\n    get src() {\n        return this.getAttribute(\"src\");\n    }\n\n    set src(value) {\n        return this.setAttribute(\"src\", value);\n    }\n\n    static get observedAttributes() {\n        return [\"src\"];\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        this.load();\n    }\n\n    load(program) {\n        if (this.requestId) cancelAnimationFrame(this.requestId);\n        this.start(program);\n    }\n\n    start(program) {\n        this.gamebuino = wasm_gamebuino__WEBPACK_IMPORTED_MODULE_0__[\"Gamebuino\"].new();\n\n        let arrayBufferPromise;\n\n        if (program) {\n            arrayBufferPromise = Promise.resolve(program);\n        } else {\n            arrayBufferPromise = fetch(this.src)\n                .then(response => response.arrayBuffer());\n        }\n\n        arrayBufferPromise.then(buffer => {\n            this.gamebuino.load_program(new Uint8Array(buffer), 0x4000);\n            this.step();\n        });\n    }\n\n    step(timestamp) {\n        const goalTicksPerSecond = 20000000;\n        const maxIterations = goalTicksPerSecond / 30;\n        const delta = timestamp - this.lastTimestamp;\n        this.lastTimestamp = timestamp;\n        let iterations = (delta * goalTicksPerSecond) / 1000;\n        if (iterations > maxIterations) iterations = maxIterations;\n\n        this.gamebuino.run(iterations, this.buttonData);\n\n        let buf8 = new Uint8Array(\n            wasm_gamebuino_wasm_gamebuino_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer,\n            this.gamebuino.screen_data(),\n            160 * 128 * 4\n        );\n        this.imageData.data.set(buf8);\n        this.ctx.putImageData(this.imageData, 0, 0);\n        this.ctx.drawImage(this.canvas, 0, 0);\n\n        this.requestId = requestAnimationFrame(t => this.step(t));\n    }\n\n    squareDist(touch, x, y) {\n        return (\n            (touch.offsetX - x) * (touch.offsetX - x) +\n            (touch.offsetY - y) * (touch.offsetY - y)\n        );\n    }\n\n    handlePointerDown(event) {\n        event.preventDefault();\n        this.pointerPresses[event.pointerId] = 0b11111111;\n        this.handlePointerMove(event);\n        this.updateButtonData();\n    }\n\n    handlePointerMove(event) {\n        if (this.pointerPresses.hasOwnProperty(event.pointerId)) {\n            this.pointerPresses[event.pointerId] = this.handlePointer(event);\n        }\n        this.updateButtonData();\n    }\n\n    handlePointerUp(event) {\n        delete this.pointerPresses[event.pointerId];\n        this.updateButtonData();\n    }\n\n    updateButtonData() {\n        this.buttonData = 0b11111111;\n        for (let prop in this.pointerPresses) {\n            this.buttonData &= this.pointerPresses[prop];\n        }\n    }\n\n    handlePointer(event) {\n        if (this.squareDist(event, dpadX, dpadY) < dpadDist * dpadDist) {\n            var angle = Math.atan2(\n                dpadY - event.offsetY,\n                event.offsetX - dpadX\n            );\n\n            if (angle < (-7 * Math.PI) / 8) {\n                return 0b11111101;\n            } else if (angle < (-5 * Math.PI) / 8) {\n                return 0b11111100;\n            } else if (angle < (-3 * Math.PI) / 8) {\n                return 0b11111110;\n            } else if (angle < -Math.PI / 8) {\n                return 0b11111010;\n            } else if (angle < Math.PI / 8) {\n                return 0b11111011;\n            } else if (angle < (3 * Math.PI) / 8) {\n                return 0b11110011;\n            } else if (angle < (5 * Math.PI) / 8) {\n                return 0b11110111;\n            } else if (angle < (7 * Math.PI) / 8) {\n                return 0b11110101;\n            } else {\n                return 0b11111101;\n            }\n        } else if (this.squareDist(event, aX, aY) < btnDist * btnDist) {\n            return 0b11101111;\n        } else if (this.squareDist(event, bX, bY) < btnDist * btnDist) {\n            return 0b11011111;\n        } else if (this.squareDist(event, menuX, menuY) < btnDist * btnDist) {\n            return 0b10111111;\n        } else if (this.squareDist(event, homeX, homeY) < btnDist * btnDist) {\n            return 0b01111111;\n        }\n\n        return 0b11111111;\n    }\n}\n\ncustomElements.define(\"gamebuino-emulator\", GamebuinoEmulator);\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);